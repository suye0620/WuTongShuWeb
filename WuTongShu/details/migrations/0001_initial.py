# Generated by Django 3.2.5 on 2023-04-18 15:48

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('banner_url', models.URLField(default='http://42.193.14.111/static/upload/tsxywts/banner1.jpg', verbose_name='横幅图片链接')),
                ('index', models.IntegerField(default=1, verbose_name='横幅展示顺序')),
            ],
            options={
                'verbose_name': '首页横幅',
                'verbose_name_plural': '首页横幅',
                'ordering': ('index',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='工作品牌')),
                ('index', models.IntegerField(default=1, verbose_name='品牌展示顺序')),
                ('add_menu', models.BooleanField(default=False, verbose_name='添加到导航栏')),
                ('icon', models.CharField(default='fas fa-home', max_length=30, verbose_name='导航栏图标')),
                ('banner', models.URLField(default='http://42.193.14.111/static/upload/tsxywts/banner6.jpg', verbose_name='品牌封面')),
                ('primary_color', models.CharField(default='#FFD700', max_length=7, verbose_name='颜色1')),
                ('secondary_color', models.CharField(default='#fd614a', max_length=7, verbose_name='颜色2')),
            ],
            options={
                'verbose_name': '工作品牌',
                'verbose_name_plural': '工作品牌',
                'ordering': ('index',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='部门名称')),
                ('url', models.URLField(blank=True, verbose_name='介绍链接')),
                ('avatar', models.URLField(default='http://42.193.14.111/static/upload/tsxywts/testi2.jpg', verbose_name='头像')),
                ('desc', models.TextField(max_length=500, verbose_name='描述')),
                ('button_word', models.CharField(default='详情', max_length=10, verbose_name='跳转文字')),
            ],
            options={
                'verbose_name': '成员',
                'verbose_name_plural': '成员',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='梧桐树学生工作品牌', max_length=30, verbose_name='网站名字')),
                ('keywords', models.CharField(default='关键字测试', max_length=50, verbose_name='网站关键词')),
                ('logo', models.URLField(default='http://42.193.14.111/static/upload/tsxywts/wutongshu-logo.png', max_length=100, verbose_name='网站logo')),
                ('desc', models.CharField(max_length=100, verbose_name='网站描述')),
                ('slogan', models.CharField(max_length=100, verbose_name='网站标语')),
                ('dynamic_slogan', models.CharField(blank=True, max_length=100, verbose_name='动态标语')),
                ('icp_number', models.CharField(max_length=40, verbose_name='备案号')),
                ('icp_url', models.URLField(default='http://www.beian.miit.gov.cn/', max_length=100, verbose_name='备案链接')),
            ],
            options={
                'verbose_name': '网站设置',
                'verbose_name_plural': '网站设置',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='标签名称')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='文章标题')),
                ('author', models.CharField(blank=True, default='作者', max_length=10, null=True, verbose_name='作者')),
                ('desc', models.CharField(max_length=50, verbose_name='文章描述')),
                ('cover', models.URLField(default='http://42.193.14.111/static/upload/tsxywts/%E6%99%9A%E9%9C%9E.jpg', verbose_name='文章封面')),
                ('content_url', models.URLField(default='https://mp.weixin.qq.com/s/gkeOZMPFoQQdMH5kM_sYCQ', max_length=250, verbose_name='文章链接')),
                ('click_count', models.PositiveIntegerField(default=0, verbose_name='阅读量')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='是否在首页推荐')),
                ('index', models.IntegerField(blank=True, default=1, verbose_name='首页子版块中的展示顺序')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='发布时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='details.category', verbose_name='文章分类')),
                ('tag', models.ManyToManyField(blank=True, to='details.Tag', verbose_name='文章标签')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'ordering': ('-add_time',),
            },
        ),
    ]
